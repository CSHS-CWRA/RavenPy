# This workflow requires a personal access token named `BUMP_VERSION_TOKEN` with the following privileges:
# - Contents: Read and Write
# - Metadata: Read-Only
# - Pull Requests: Read and Write

name: "Bump Patch Version"

on:
  push:
    branches:
      - master
    paths-ignore:
      - .cruft.json
      - .editorconfig
      - .github/**.yml
      - .gitignore
      - .pre-commit-config.yaml
      - .yamllint.yaml
      - .zenodo.json
      - AUTHORS.rst
      - CHANGELOG.rst
      - CI/**/*.in
      - CI/**/*.py
      - CI/**/*.txt
      - CODE_OF_CONDUCT.md
      - CONTRIBUTING.rst
      - Makefile
      - .readthedocs.yml
      - docs/*.py
      - docs/*.rst
      - environment-docs.yml
      - environment-dev.yml
      - pyproject.toml
      - tests/**.py
      - tox.ini
      - src/ravenpy/__init__.py
  workflow_dispatch:

permissions:
  contents: read

jobs:
  bump_patch_version:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            files.pythonhosted.org:443
            github.com:443
            pypi.org:443
      - name: Checkout Repository (no persist-credentials)
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Set up Python3
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: "3.x"
      - name: Config Commit Bot
        run: |
          git config --local user.email "bumpversion[bot]@ouranos.ca"
          git config --local user.name "bumpversion[bot]"
      - name: Install CI libraries
        run: |
          python -m pip install --require-hashes -r CI/requirements_ci.txt
      - name: Conditional Bump Version
        run: |
          CURRENT_VERSION=$(bump-my-version show current_version)
          if [[ ${CURRENT_VERSION} =~ -dev(\.\d+)? ]]; then
            echo "Development version (ends in 'dev(\.\d+)?'), bumping 'build' version"
            bump-my-version bump build
          else
            echo "Version is stable, bumping 'patch' version"
            bump-my-version bump patch
          fi
          echo "new_version=$(bump-my-version show current_version)"
      - name: Push Changes
        uses: ad-m/github-push-action@d91a481090679876dfc4178fef17f286781251df # v0.8.0
        with:
          force: false
          github_token: ${{ secrets.BUMP_VERSION_TOKEN }}
          branch: ${{ github.ref }}
