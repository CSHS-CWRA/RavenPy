#!/usr/bin/env python
#
# ravenpy documentation build configuration file, created by
# sphinx-quickstart on Fri Jun  9 13:47:02 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another
# directory, add these directories to sys.path here. If the directory is
# relative to the documentation root, use os.path.abspath to make it
# absolute, like shown here.
#
import os
import sys
from datetime import date
from pathlib import Path

sys.path.insert(0, os.path.abspath(".."))

import ravenpy  # noqa: E402

# -- Workarounds ------------------------------------------------------

def rebuild_readme():
    """Rebuild the readme.rst file from the top-level README.rst file.

    This is a workaround to remove the badge table found in the README.rst
    when building the docs specifically for latex/pdf output.
    """

    with Path("../README.rst").open(encoding="utf-8") as f:
        readme = f.read()

    # Remove the badge table
    readme = readme.replace("=======\nRavenPy\n=======", "=======\nRavenPy\n=======\n\n.. only:: not latex")
    readme = readme.replace("\n+-", "\n    +-")
    readme = readme.replace("\n|", "\n    |")

    with Path("readme.rst").open("w", encoding="utf-8") as f:
        f.write(readme)

rebuild_readme()


# -- General configuration ---------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.autosectionlabel",
    "sphinx.ext.autosummary",
    "sphinx.ext.extlinks",
    "sphinx.ext.napoleon",
    "sphinx.ext.todo",
    "sphinx.ext.viewcode",
    "IPython.sphinxext.ipython_console_highlighting",
    "myst_nb",
    "sphinx_click",
    "sphinx_codeautolink",
    "sphinx_copybutton",
    "sphinxcontrib.cairosvgconverter",
    # "sphinxcontrib.autodoc_pydantic",  # FIXME: Does not seem to be compatible with RavenPy codebase.
]

linkcheck_ignore = [
    r"https://www.ouranos.ca",  # bad ssl certificate
    # Added on 2023-03-06: Wiley does not allow linkcheck requests (error 403)
    r"https://doi.org/10.1029/2020WR029229",
]

nbsphinx_custom_formats = {
    ".md": ["jupytext.reads", {"fmt": "mystnb"}],
}
autosectionlabel_prefix_document = True
autosectionlabel_maxdepth = 2

autosummary_generate = True

nb_execution_mode = "cache"
nb_execution_allow_errors = False
nb_execution_excludepatterns = [
    "configuration.md",
    "notebooks/*.ipynb",
    "notebooks/paper/*.ipynb",
]

# nbsphinx_execute = "auto"
# nbsphinx_timeout = 1
# nbsphinx_allow_errors = True

extlinks = {
    "issue": ("https://github.com/CSHS-CWRA/RavenPy/issues/%s", "GH/%s"),
    "pull": ("https://github.com/CSHS-CWRA/RavenPy/pull/%s", "PR/%s"),
    "user": ("https://github.com/%s", "@%s"),
}

# To ensure that underlined fields (e.g. `_field`) are shown in the docs.
autodoc_default_options = {
    "members": True,
    "private-members": False,
    "special-members": False,
    "undoc-members": True,
}

# To avoid having to install these and burst memory limit on ReadTheDocs.
autodoc_mock_imports = [
    "affine",
    "cftime",
    "cf_xarray",
    "click",
    "climpred",
    "clisops",
    "fiona",
    "gdal",
    "h5netcdf",
    "netCDF4",
    "osgeo",
    "geopandas",
    "haversine",
    "holoviews",
    "hvplot",
    "lxml",
    "owslib",
    "pandas",
    "pyproj",
    "rasterio",
    "rioxarray",
    "scipy",
    "shapely",
    "spotpy",
    "statsmodels",
    "xarray",
    "xclim",
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a dictionary of suffix: filetype
source_suffix = {".rst": "restructuredtext"}

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "RavenPy"
copyright = f"2021-{date.today().year}, David Huard"
author = "David Huard"

# The version info for the project you're documenting, acts as replacement
# for |version| and |release|, also used in various other places throughout
# the built documents.
#
# The short X.Y version.
version = ravenpy.__version__
# The full version, including alpha/beta/rc tags.
release = ravenpy.__version__

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# Sphinx-intl configuration
locale_dirs = ["locales/"]
gettext_compact = False  # optional

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = [
    "_build",
    "Thumbs.db",
    ".DS_Store",
    ".jupyter_cache",
    "jupyter_execute",
    "notebooks/paper",
    "notebooks/HydroShare_integration.ipynb",
]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False

# Suppress "WARNING: unknown mimetype for ..." when building EPUB.
suppress_warnings = ["epub.unknown_project_files", "mystnb.unknown_mime_type"]

# -- Options for HTML output -------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "sphinx_rtd_theme"

# Theme options are theme-specific and customize the look and feel of a
# theme further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {"style_external_links": True}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
if not os.path.exists("_static"):
    os.makedirs("_static")
html_static_path = ["_static"]

# -- Options for HTMLHelp output ---------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "ravenpydoc"

# -- Options for LaTeX output ------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #
    'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    'preamble': '',
    # Latex figure (float) alignment
    #
    'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title, author, documentclass
# [howto, manual, or own class]).
latex_documents = [
    (master_doc, "ravenpy.tex", "RavenPy Documentation", "David Huard", "manual"),
]

# -- Options for manual page output ------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, "ravenpy", "RavenPy Documentation", [author], 1)]

# -- Options for Texinfo output ----------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        "ravenpy",
        "RavenPy Documentation",
        author,
        "ravenpy",
        "A Python wrapper to setup and run the hydrologic modelling framework Raven.",
        "Miscellaneous",
    ),
]
