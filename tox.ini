[tox]
min_version = 4.0
envlist =
    black
    py{38,39,310,311}
    docs
requires =
    pip >=21.0
    setuptools >=63.0
opts =
    -vv

[testenv:black]
skip_install = True
deps =
    flake8
    black
commands =
    make lint
allowlist_externals =
    make

[testenv:docs]
extras =
    docs
commands =
    make --directory=docs clean html
allowlist_externals =
    make

[testenv]
setenv =
    PYTEST_ADDOPTS = --numprocesses=logical --durations=10
passenv =
    CI
    COVERALLS_*
    GDAL_VERSION
    GITHUB_*
    LD_PRELOAD
    RAVENPY_*
extras =
    dev
    gis
download = true
install_command =
    python -m pip install --no-user {opts} {packages}
deps =
    # numpy must be present in python env before GDAL is installed
    numpy
    gdal == {env:GDAL_VERSION}
commands =
    # Regenerate NetCDF4-Python wheel from source files
    # Use older version due to errors in new version (https://github.com/Unidata/netcdf4-python/issues/1192)
    python -m pip install --upgrade --force-reinstall --no-deps --no-cache-dir netcdf4==1.5.8 --no-binary netcdf4
    # Rebuild GDAL in order to gain access to GDAL system-level objects
    python -m pip install --upgrade --force-reinstall --no-deps --no-cache-dir gdal=={env:GDAL_VERSION} --no-binary gdal
    # Build raven-hydro from source distribution
    python -m pip install --upgrade --force-reinstall --no-deps --no-cache-dir raven-hydro==0.2.0 --no-binary raven-hydro
    # Run tests
    pytest --cov
    # Coveralls requires access to a repo token set in .coveralls.yml in order to report stats
    - coveralls --service=github
allowlist_externals =
    make
    env
