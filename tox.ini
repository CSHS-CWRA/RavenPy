[tox]
envlist = black, py{38,39,310}-numpy, docs
requires =
    pip >= 20.0
opts = --verbose

[testenv:black]
skip_install = True
deps =
    flake8
    black
commands = make lint
allowlist_externals = make

[testenv:docs]
extras = docs
commands = make --directory=docs clean html
allowlist_externals = make

[testenv]
setenv =
    PYTEST_ADDOPTS = "--color=yes"
passenv =
    CI
    COVERALLS_*
    GDAL_VERSION
    GITHUB_*
    LD_PRELOAD
extras = dev
download = true
install_command =
    python -m pip install --no-user {opts} {packages}
deps =
    # numpy must be present in python env before GDAL is installed
    !numpy: numpy
commands =
    # Pin @ <v65.6 due to incompatibility with numpy (see: https://github.com/numpy/numpy/issues/22623)
;    python -m pip install --upgrade --force-reinstall --no-deps --no-cache-dir setuptools<65.6
    # Install the latest NumPy and Numba before GDAL and netCDF4 are installed
;    numpy: python -m pip install --upgrade --force-reinstall --no-cache-dir numpy==1.23 numba
    # Install NetCDF4-Python via source files
    # Pin @v1.6.0 needed due to issue with PyPI wheels (see: https://github.com/Unidata/netcdf4-python/issues/1192)
;    python -m pip install --upgrade --force-reinstall --no-deps --no-cache-dir netcdf4==1.6.2 --no-binary netcdf4
    # Deal with some GDAL silliness
;    python -m pip install --upgrade --force-reinstall --no-deps --no-cache-dir GDAL=={env:GDAL_VERSION} --global-option=build_ext --global-option="-I/usr/include/gdal"
    # Install the Raven and Ostrich binaries
;    python -m pip install --no-user --verbose --no-deps --no-cache-dir . --install-option="--with-binaries"
    # Run tests
    pytest --cov
    # Coveralls requires access to a repo token set in .coveralls.yml in order to report stats
    - coveralls --service=github
allowlist_externals =
;    make
;    git
;    env
;    echo
