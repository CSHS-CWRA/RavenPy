[tox]
min_version = 4.5
envlist =
    black
    py{38,39,310,311,312}-{linux,macos}
    docs
requires =
    flit
    pip >=23.0
    setuptools >=68.0
    wheel >=0.42.0
opts =
    -vv

[testenv:black]
skip_install = True
deps =
    flake8 >=7.0.0
    black >=24.2.0
    isort >=5.13.2
commands =
    make lint
allowlist_externals =
    make

[testenv:docs]
extras =
    docs
commands =
    make --directory=docs clean html
allowlist_externals =
    make

[testenv]
platform =
    linux: linux
    macos: darwin
setenv =
    PYTEST_ADDOPTS = --numprocesses=logical --durations=10
    PYTHONPATH = {toxinidir}
passenv =
    CI
    COVERALLS_*
    GDAL_VERSION
    GITHUB_*
    LD_LIBRARY_PATH
    LD_PRELOAD
    RAVENPY_*
    UPSTREAM_BRANCH
extras =
    dev
    gis
download = true
install_command =
    python -m pip install --no-user {opts} {packages}
deps =
    # numpy must be present in python env before GDAL is installed
    numpy
    gdal[numpy] == {env:GDAL_VERSION}
commands_pre =
    python -m pip list
    - python -m pip check
commands =
    # Regenerate NetCDF4-Python wheel from source files
    # Rebuild netcdf4 on Linux due to errors in new version (https://github.com/Unidata/netcdf4-python/issues/1192)
    # linux: python -m pip install --upgrade --force-reinstall --no-deps --no-cache-dir netcdf4==1.6.4 --no-binary netcdf4
    # Rebuild GDAL in order to gain access to GDAL system-level objects
     python -m pip install --upgrade --force-reinstall --no-deps --no-cache-dir --no-build-isolation gdal[numpy]=={env:GDAL_VERSION}.*
    # Install raven-hydro from the upstream branch
    upstream: python -m pip install --upgrade --force-reinstall --no-deps --no-cache-dir git+https://github.com/Ouranosinc/raven-hydro.git@{env:UPSTREAM_BRANCH}
    # Run tests
    pytest --cov
    # Coveralls requires access to a repo token set in .coveralls.yml in order to report stats
    - coveralls --service=github
allowlist_externals =
    make
    env
