[build-system]
requires = ["flit_core >=3.10.1,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "ravenpy"
authors = [
  {name = "David Huard", email = "huard.david@ouranos.ca"},
  {name = "Richard Arsenault", email = "Richard.Arsenault@etsmtl.ca"}
]
maintainers = [
  {name = "Trevor James Smith", email = "smith.trevorj@ouranos.ca"}
]
readme = {file = "README.rst", content-type = "text/x-rst"}
requires-python = ">=3.10.0"
keywords = ["raven", "raven-hydro", "hydrology", "gis", "analysis", "modelling"]
license = {file = "LICENSE"}
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Scientific/Engineering :: Atmospheric Science",
  "Topic :: Scientific/Engineering :: GIS",
  "Topic :: Scientific/Engineering :: Hydrology"
]
dynamic = ["description", "version"]
dependencies = [
  "cftime >=1.4.1",
  # cf-xarray is differently named on conda-forge
  "cf-xarray >=0.9.3",
  "click >=8.0.0",
  "climpred >=2.4.0",
  "dask >=2024.8.1",
  "h5netcdf >=1.3.0",
  "haversine >=2.8.0",
  "matplotlib >=3.6.0",
  "numpy >=1.24.0",
  "owslib >=0.29.1",
  "pandas >=2.2.0",
  "pint >=0.24.4",
  "platformdirs >=4.3.6",
  "pydantic >=2.11",
  "pydap >=3.4.0,<3.5.5", # pydap 3.5.5 is not currently supported by `xarray` (v2025.3.1)
  "pymbolic >=2024.2",
  "scipy >=1.11.0",
  "spotpy >=1.6.1",
  "statsmodels >=0.14.2",
  "typing-extensions",
  "xarray >=2023.11.0,!=2024.10.0",
  "xclim >=0.55.1",
  "xskillscore"
]

[project.optional-dependencies]
dev = [
  # Dev tools and testing
  "black ==25.1.0",
  "blackdoc ==0.3.9",
  "bump-my-version >=0.32.1",
  "coverage >=7.5.0",
  "filelock >=3.14.0",
  "flake8 >=7.1.1",
  "flake8-rst-docstrings >=0.3.0",
  "flit >=3.10.1,<4.0",
  "holoviews",
  "hvplot",
  "isort ==6.0.0",
  "mypy >=1.14.1",
  "nbval",
  "numpydoc >=1.8.0",
  "pip >=25.0",
  "pre-commit >=3.5.0",
  "pylint >=3.3.0",
  "pytest >=8.3.2",
  "pytest-cov >=5.0.0",
  "pytest-xdist >=3.2.0",
  "ruff >=0.9.0",
  "tox >=4.24.1",
  "watchdog >=4.0.0"
]
docs = [
  # Requires python >=3.11
  "autodoc-pydantic >=2.1.0",
  "birdhouse-birdy",
  "cairosvg >=2.6.0",
  "cartopy >=0.23.0",
  "clisops >=0.16.1",
  "gcsfs",
  # Needed for notebooks/HydroShare_integration.ipynb
  # See: https://github.com/CSHS-CWRA/RavenPy/pull/326
  # "hsclient",
  "intake <2.0",
  "intake-esm >=2023.07.07",
  "intake-xarray <2.0",
  "ipykernel",
  "ipyleaflet",
  "ipython >=8.5.0",
  "ipywidgets",
  "jupyter-cache",
  "jupyter_client",
  "jupytext",
  "matplotlib >=3.6.0",
  "myst_nb",
  "nbsphinx >=0.9.5",
  "pymetalink >=6.5.2",
  "s3fs",
  "salib",
  "sphinx >=7.1.0",
  "sphinx-click",
  "sphinx-codeautolink",
  "sphinx-copybutton",
  "sphinx-rtd-theme >=1.0",
  "sphinxcontrib-svg2pdfconverter >=1.2.3",
  "xesmf",
  "zarr >=2.10.0,<3.0" # FIXME: zarr v3 does not support FSMap like before: https://github.com/zarr-developers/zarr-python/issues/2706
]
gis = [
  "affine >=2.4.0",
  "fiona >=1.9",
  "geopandas >=1.0",
  "gdal >=3.1",
  "lxml",
  "netcdf4 >=1.7.2",
  "pyproj >=3.3.0",
  "rasterio",
  "rioxarray",
  "setuptools >=71.0",
  "shapely >=2.0"
]
raven-hydro = [
  "raven-hydro >=0.4.0,<1.0"
]
all = [
  "ravenpy[dev]",
  "ravenpy[docs]",
  "ravenpy[gis]",
  "ravenpy[raven-hydro]"
]

[project.scripts]
ravenpy = "ravenpy.cli:main"

[project.urls]
"Changelog" = "https://ravenpy.readthedocs.io/en/latest/changelog.html"
"Homepage" = "https://ravenpy.readthedocs.io"
"Issue tracker" = "https://github.com/CSHS-CWRA/RavenPy/issues"
"Source" = "https://github.com/CSHS-CWRA/RavenPy"
"About CSHS-CWRA" = "https://cwra.org/en/"
"About Ouranos" = "https://ouranos.ca/en/"

[tool]

[tool.black]
target-version = [
  "py310",
  "py311",
  "py312",
  "py313"
]

[tool.bumpversion]
current_version = "0.18.1"
commit = true
commit_args = "--no-verify"
tag = false
tag_name = "v{new_version}"
allow_dirty = true
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\-(?P<release>[a-z]+)(\\.(?P<build>\\d+)))?"
serialize = [
  "{major}.{minor}.{patch}-{release}.{build}",
  "{major}.{minor}.{patch}"
]

[[tool.bumpversion.files]]
filename = "src/ravenpy/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "tests/test_ravenpy.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

[[tool.bumpversion.files]]
filename = ".cruft.json"
search = "\"version\": \"{current_version}\""
replace = "\"version\": \"{new_version}\""

[tool.bumpversion.parts.build]
independent = false

[tool.bumpversion.parts.release]
optional_value = "release"
values = [
  "dev",
  "release"
]

[tool.codespell]
ignore-words-list = "astroid,documen,socio-economic"

[tool.coverage.paths]
source = ["src/ravenpy/", "*/site-packages/ravenpy/"]

[tool.coverage.run]
relative_files = true
omit = ["tests/*.py"]
source = ["ravenpy"]

[tool.flit.sdist]
include = [
  ".zenodo.json",
  "AUTHORS.rst",
  "CHANGELOG.rst",
  "CONTRIBUTING.rst",
  "LICENSE",
  "Makefile",
  "README.rst",
  "environment-dev.yml",
  "environment-rtd.yml",
  "docs/_static/_images/*.gif",
  "docs/_static/_images/*.jpg",
  "docs/_static/_images/*.png",
  "docs/_static/_images/*.rst",
  "docs/**/*.ipynb",
  "docs/**/*.md",
  "docs/**/*.rst",
  "docs/Makefile",
  "docs/conf.py",
  "docs/make.bat",
  "src/ravenpy/**/*.py",
  "src/ravenpy/data/**/*.csv",
  "src/ravenpy/data/**/*.zip",
  "setup.cfg",
  "tests/*.py",
  "tests/test.cfg",
  "tox.ini"
]
exclude = [
  "**/*.py[co]",
  "**/__pycache__",
  ".*",
  "docs/_build",
  "docs/apidoc/modules.rst",
  "docs/source/**/.ipynb_checkpoints",
  "docs/apidoc/ravenpy*.rst"
]

[tool.isort]
profile = "black"
py_version = "310"

[tool.mypy]
plugins = [
  "pydantic.mypy"
]
check_untyped_defs = true
disallow_any_generics = true
files = "."
follow_imports = "silent"
no_implicit_reexport = false
python_version = 3.10
show_error_codes = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = [
  # Don't require test functions to include types
  "tests.*"
]
allow_untyped_defs = true
disable_error_code = "attr-defined"
ignore_missing_imports = true

[tool.numpydoc_validation]
checks = [
  "all", # report on all checks, except the below
  "ES01",
  "EX01",
  "GL01",
  "GL08",
  "PR01",
  "PR08",
  "RT01",
  "RT03",
  "SA01",
  "SA04",
  "SS03",
  "SS06"
]
# remember to use single quotes for regex in TOML
exclude = [
  # don't report on objects that match any of these regex
  '\.undocumented_method$',
  '\.__repr__$',
  # any object starting with an underscore is a private object
  '\._\w+'
]
override_SS05 = [
  # override SS05 to allow docstrings starting with these words
  '^Process ',
  '^Assess ',
  '^Access '
]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
  "--verbose",
  "--color=yes",
  "--strict-config",
  "--strict-markers",
  "--tb=native",
  "--numprocesses=0",
  "--maxprocesses=8",
  "--dist=worksteal"
]
python_files = "test_*.py"
norecursedirs = ["docs/notebooks"]
filterwarnings = ["ignore::UserWarning"]
testpaths = [
  "tests"
]
pythonpath = [
  "src"
]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "online: mark tests that require external services (deselect with '-m \"not online\"')"
]
xfail_strict = true

[tool.ruff]
src = ["ravenpy"]
line-length = 150
target-version = "py39"
exclude = [
  ".eggs",
  ".git",
  "build",
  "docs",
  "tests"
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
extend-select = [
  "RUF022" # unsorted-dunder-all
]
ignore = [
  "COM", # commas
  "D100", # Missing docstring in public module
  "D101", # Missing docstring in public class
  "D102", # Missing docstring in public method
  "D103", # Missing docstring in public function
  "D104", # Missing docstring in public package
  "D105", # Missing docstring in magic method
  "D205", # blank-line-after-summary
  "D400", # First line should end with a period
  "D401", # First line should be in imperative mood
  "E722" # do not use bare except, specify exception instead
]
preview = true
select = [
  "BLE", # blind-except
  "D", # docstrings
  "E", # pycodestyle errors
  "FLY002", # static-join-to-fstring
  "G", # logging-format
  "N", # naming conventions
  "PERF", # iterator performance
  "PTH", # pathlib
  "RUF010", # explicit-f-string-type-conversion
  "RUF013", # implicit-optional
  "S", # bandit
  "UP", # python version conventions
  "W" # pycodestyle warnings
]

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true

[tool.ruff.lint.isort]
known-first-party = ["ravenpy"]
case-sensitive = true
detect-same-package = false
lines-after-imports = 2
no-lines-before = ["future", "standard-library"]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.per-file-ignores]
"docs/**" = ["E402"]
"src/ravenpy/**/__init__.py" = ["F401", "F403"]
"tests/**" = ["D100", "D101", "D102", "D103", "S101"]

[tool.ruff.lint.pycodestyle]
max-doc-length = 180

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.vulture]
exclude = []
ignore_decorators = ["@pytest.fixture"]
ignore_names = []
min_confidence = 90
paths = ["src/ravenpy", "tests"]
sort_by_size = true
